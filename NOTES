The module opens the backing file for read/write as soon as a link
is created. All local processes using this file and associated page
cache access the backing file through this one file descriptor. Is this
a good idea or not?

Error checking and some features are woefully inadequate:
In particular:

	Memory mappings must not exceed backing file size.
	Backing file can't be deleted while linked.
        Backing file must exist before mapping is created.

Moral? Don't use this on a machine that you value. It will crash.

UML hostfs is quite similar to this.
FUSE shared-writable mmap is similar to this (if it really exists?).

Manual cache control:
Issue an lseek/read to update the page cache prior to a read operation.
Pvshm does not support reading/writing (only mmap), so we use the read
to control cache updates.

Similarly, use the standard msync system call to writeback dirty pages
in the page cache to the backing file.

Everything is done at the page level. Finer granularity is not supported.
Yet.
